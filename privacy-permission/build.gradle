plugins {
    //使用Java-gradle-plugin代替java-library
    //自动添加插件: java, 自动添加依赖: gradleApi()
    //增加一个gradlePlugin配置, 用于发布插件到Gradle插件平台
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    // The latest version of the Plugin Publishing Plugin can be found on the Gradle Plugin Portal.
    // https://plugins.gradle.org/m2/com/gradle/publish/plugin-publish-plugin/
    id 'com.gradle.plugin-publish' version '1.2.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}


def pluginName = "Privacy Permission Plugin For Android Application"
def pluginDescription = """
    1. Statistics privacy permission by apkanalyzer parse all *.class file.
"""

def siteUrl = "https://jingtuo.github.io/codespaces/"
def githubUrl = "https://github.com/jingtuo/codespaces"
def gitHttpUrl = "https://github.com/jingtuo/codespaces.git"

//分组
def curArtifactId = "privacy-permission"
group = "io.github.jingtuo"
version = '0.0.4'
def pluginId = "io.github.jingtuo.$curArtifactId"

gradlePlugin {
    // Set the website for your plugin’s project.
    website = siteUrl
    // Provide the source repository URI so that others can find it if they want to contribute.
    vcsUrl = gitHttpUrl
    plugins {
        privacyPermission {
            id = pluginId
            implementationClass = "io.github.jingtuo.privacy.permission.PrivacyPermissionPlugin"
            displayName = pluginName
            description = pluginDescription
            tags.addAll('Android', 'Permission', "CallStack")
        }
    }
}

dependencies {
//    implementation group: 'org.ow2.asm', name: 'asm-analysis', version: '9.5'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.apache.poi:poi:5.2.4'
    implementation 'org.apache.poi:poi-ooxml:5.2.4'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'com.google.code.gson:gson:2.10.1'
}

// 发布到本地
publishing {
    //插件(MavenPluginPublishPlugin)会根据'gradlePlugin.plugins.插件名'的插件名生成一个publication
    //如插件名是permission, 则会生成一个permissionPluginMarkerMaven
    //详见: MavenPluginPublishPlugin

    //每一个publication都会生成发布任务
    //如publication是permission
    //则生成一个publishPermissionPublicationTo仓库(repositories每有一个仓库配置, 便有一个)
    //默认有一个本地仓库配置, 所以会有publishToMavenLocal, publishPrivacyPermissionPublicationToMavenLocal
    publications {
        privacyPermission(MavenPublication) {
            artifactId = curArtifactId
            from components.java
            pom {
                name = pluginName
                description = pluginDescription

                developers {
                    developer {
                        id = "JingTuo"
                        name = "Jing Tuo"
                        email = "jing.tuo@qq.com"
                    }
                }

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = githubUrl
                    developerConnection = gitHttpUrl
                    url = siteUrl
                }
            }

        }
    }
}

javadoc {
    options.encoding = "UTF-8"
}